/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class AppAngularJSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.AppAngularJS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cModulosAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cModulosModuloParserRuleCall_0_0 = (RuleCall)cModulosAssignment_0.eContents().get(0);
		private final Assignment cTemplatesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTemplatesTemplateParserRuleCall_1_0 = (RuleCall)cTemplatesAssignment_1.eContents().get(0);
		private final Assignment cServicesAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cServicesServiceParserRuleCall_2_0 = (RuleCall)cServicesAssignment_2.eContents().get(0);
		private final Assignment cModelosAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cModelosModeloParserRuleCall_3_0 = (RuleCall)cModelosAssignment_3.eContents().get(0);
		private final Assignment cComponentesAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cComponentesComponenteParserRuleCall_4_0 = (RuleCall)cComponentesAssignment_4.eContents().get(0);
		
		//AppAngularJS:
		//	modulos+=Modulo | templates+=Template | services+=Service | modelos+=Modelo | componentes+=Componente;
		@Override public ParserRule getRule() { return rule; }
		
		//modulos+=Modulo | templates+=Template | services+=Service | modelos+=Modelo | componentes+=Componente
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//modulos+=Modulo
		public Assignment getModulosAssignment_0() { return cModulosAssignment_0; }
		
		//Modulo
		public RuleCall getModulosModuloParserRuleCall_0_0() { return cModulosModuloParserRuleCall_0_0; }
		
		//templates+=Template
		public Assignment getTemplatesAssignment_1() { return cTemplatesAssignment_1; }
		
		//Template
		public RuleCall getTemplatesTemplateParserRuleCall_1_0() { return cTemplatesTemplateParserRuleCall_1_0; }
		
		//services+=Service
		public Assignment getServicesAssignment_2() { return cServicesAssignment_2; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_2_0() { return cServicesServiceParserRuleCall_2_0; }
		
		//modelos+=Modelo
		public Assignment getModelosAssignment_3() { return cModelosAssignment_3; }
		
		//Modelo
		public RuleCall getModelosModeloParserRuleCall_3_0() { return cModelosModeloParserRuleCall_3_0; }
		
		//componentes+=Componente
		public Assignment getComponentesAssignment_4() { return cComponentesAssignment_4; }
		
		//Componente
		public RuleCall getComponentesComponenteParserRuleCall_4_0() { return cComponentesComponenteParserRuleCall_4_0; }
	}
	public class ObjetoAngularElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ObjetoAngular");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cModuloParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComponenteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ObjetoAngular:
		//	Modulo | Componente | Service;
		@Override public ParserRule getRule() { return rule; }
		
		//Modulo | Componente | Service
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Modulo
		public RuleCall getModuloParserRuleCall_0() { return cModuloParserRuleCall_0; }
		
		//Componente
		public RuleCall getComponenteParserRuleCall_1() { return cComponenteParserRuleCall_1; }
		
		//Service
		public RuleCall getServiceParserRuleCall_2() { return cServiceParserRuleCall_2; }
	}
	public class ModuloElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Modulo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseStrictKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAngularModuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cApostropheCommaLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametrosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cParametrosObjetoAngularCrossReference_4_0 = (CrossReference)cParametrosAssignment_4.eContents().get(0);
		private final RuleCall cParametrosObjetoAngularEStringParserRuleCall_4_0_1 = (RuleCall)cParametrosObjetoAngularCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParametrosAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cParametrosObjetoAngularCrossReference_5_1_0 = (CrossReference)cParametrosAssignment_5_1.eContents().get(0);
		private final RuleCall cParametrosObjetoAngularEStringParserRuleCall_5_1_0_1 = (RuleCall)cParametrosObjetoAngularCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketRightParenthesisSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Modulo:
		//	'\'use strict\';'? 'angular.module(\'' name=EString '\',[' parametros+=[ObjetoAngular|EString] (","
		//	parametros+=[ObjetoAngular|EString])* ']);';
		@Override public ParserRule getRule() { return rule; }
		
		//'\'use strict\';'? 'angular.module(\'' name=EString '\',[' parametros+=[ObjetoAngular|EString] (","
		//parametros+=[ObjetoAngular|EString])* ']);'
		public Group getGroup() { return cGroup; }
		
		//'\'use strict\';'?
		public Keyword getUseStrictKeyword_0() { return cUseStrictKeyword_0; }
		
		//'angular.module(\''
		public Keyword getAngularModuleKeyword_1() { return cAngularModuleKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'\',['
		public Keyword getApostropheCommaLeftSquareBracketKeyword_3() { return cApostropheCommaLeftSquareBracketKeyword_3; }
		
		//parametros+=[ObjetoAngular|EString]
		public Assignment getParametrosAssignment_4() { return cParametrosAssignment_4; }
		
		//[ObjetoAngular|EString]
		public CrossReference getParametrosObjetoAngularCrossReference_4_0() { return cParametrosObjetoAngularCrossReference_4_0; }
		
		//EString
		public RuleCall getParametrosObjetoAngularEStringParserRuleCall_4_0_1() { return cParametrosObjetoAngularEStringParserRuleCall_4_0_1; }
		
		//("," parametros+=[ObjetoAngular|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//parametros+=[ObjetoAngular|EString]
		public Assignment getParametrosAssignment_5_1() { return cParametrosAssignment_5_1; }
		
		//[ObjetoAngular|EString]
		public CrossReference getParametrosObjetoAngularCrossReference_5_1_0() { return cParametrosObjetoAngularCrossReference_5_1_0; }
		
		//EString
		public RuleCall getParametrosObjetoAngularEStringParserRuleCall_5_1_0_1() { return cParametrosObjetoAngularEStringParserRuleCall_5_1_0_1; }
		
		//']);'
		public Keyword getRightSquareBracketRightParenthesisSemicolonKeyword_6() { return cRightSquareBracketRightParenthesisSemicolonKeyword_6; }
	}
	public class TemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Template");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSentenciashtmlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSentenciashtmlSentenciaHTMLParserRuleCall_2_0 = (RuleCall)cSentenciashtmlAssignment_2.eContents().get(0);
		
		//Template:
		//	name=EString '-' sentenciashtml+=SentenciaHTML*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '-' sentenciashtml+=SentenciaHTML*
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//sentenciashtml+=SentenciaHTML*
		public Assignment getSentenciashtmlAssignment_2() { return cSentenciashtmlAssignment_2; }
		
		//SentenciaHTML
		public RuleCall getSentenciashtmlSentenciaHTMLParserRuleCall_2_0() { return cSentenciashtmlSentenciaHTMLParserRuleCall_2_0; }
	}
	public class ModeloElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Modelo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModeloAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModeloKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Modelo:
		//	{Modelo}
		//	'Modelo';
		@Override public ParserRule getRule() { return rule; }
		
		//{Modelo} 'Modelo'
		public Group getGroup() { return cGroup; }
		
		//{Modelo}
		public Action getModeloAction_0() { return cModeloAction_0; }
		
		//'Modelo'
		public Keyword getModeloKeyword_1() { return cModeloKeyword_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseStrictKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDescribeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cApostropheCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFuncionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFuncionFuncionParserRuleCall_4_0 = (RuleCall)cFuncionAssignment_4.eContents().get(0);
		
		//Service:
		//	'\'use strict\';'? 'describe(\'' name=EString '\',' funcion=Funcion;
		@Override public ParserRule getRule() { return rule; }
		
		//'\'use strict\';'? 'describe(\'' name=EString '\',' funcion=Funcion
		public Group getGroup() { return cGroup; }
		
		//'\'use strict\';'?
		public Keyword getUseStrictKeyword_0() { return cUseStrictKeyword_0; }
		
		//'describe(\''
		public Keyword getDescribeKeyword_1() { return cDescribeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'\','
		public Keyword getApostropheCommaKeyword_3() { return cApostropheCommaKeyword_3; }
		
		//funcion=Funcion
		public Assignment getFuncionAssignment_4() { return cFuncionAssignment_4; }
		
		//Funcion
		public RuleCall getFuncionFuncionParserRuleCall_4_0() { return cFuncionFuncionParserRuleCall_4_0; }
	}
	public class ComponenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Componente");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseStrictKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAngularModuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModuloAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModuloModuloCrossReference_2_0 = (CrossReference)cModuloAssignment_2.eContents().get(0);
		private final RuleCall cModuloModuloEStringParserRuleCall_2_0_1 = (RuleCall)cModuloModuloCrossReference_2_0.eContents().get(1);
		private final Keyword cComponentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cApostropheCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cTemplateUrlKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTemplateAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTemplateTemplateCrossReference_8_0 = (CrossReference)cTemplateAssignment_8.eContents().get(0);
		private final RuleCall cTemplateTemplateEStringParserRuleCall_8_0_1 = (RuleCall)cTemplateTemplateCrossReference_8_0.eContents().get(1);
		private final Keyword cApostropheCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cControllerKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cParametrosAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cParametrosObjetoAngularCrossReference_11_0 = (CrossReference)cParametrosAssignment_11.eContents().get(0);
		private final RuleCall cParametrosObjetoAngularEStringParserRuleCall_11_0_1 = (RuleCall)cParametrosObjetoAngularCrossReference_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cParametrosAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cParametrosObjetoAngularCrossReference_12_1_0 = (CrossReference)cParametrosAssignment_12_1.eContents().get(0);
		private final RuleCall cParametrosObjetoAngularEStringParserRuleCall_12_1_0_1 = (RuleCall)cParametrosObjetoAngularCrossReference_12_1_0.eContents().get(1);
		private final Keyword cCommaKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFuncionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFuncionFuncionParserRuleCall_14_0 = (RuleCall)cFuncionAssignment_14.eContents().get(0);
		private final Keyword cRightSquareBracketRightCurlyBracketRightParenthesisSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Componente:
		//	'\'use strict\';'? 'angular.module(\'' modulo=[Modulo|EString] ').component(\'' name=EString '\','
		//	'{'
		//	'templateUrl:\'' template=[Template|EString] '\','
		//	'controller:[' parametros+=[ObjetoAngular|EString] ("," parametros+=[ObjetoAngular|EString])*
		//	',' funcion=Funcion
		//	']});';
		@Override public ParserRule getRule() { return rule; }
		
		//'\'use strict\';'? 'angular.module(\'' modulo=[Modulo|EString] ').component(\'' name=EString '\',' '{' 'templateUrl:\''
		//template=[Template|EString] '\',' 'controller:[' parametros+=[ObjetoAngular|EString] (","
		//parametros+=[ObjetoAngular|EString])* ',' funcion=Funcion ']});'
		public Group getGroup() { return cGroup; }
		
		//'\'use strict\';'?
		public Keyword getUseStrictKeyword_0() { return cUseStrictKeyword_0; }
		
		//'angular.module(\''
		public Keyword getAngularModuleKeyword_1() { return cAngularModuleKeyword_1; }
		
		//modulo=[Modulo|EString]
		public Assignment getModuloAssignment_2() { return cModuloAssignment_2; }
		
		//[Modulo|EString]
		public CrossReference getModuloModuloCrossReference_2_0() { return cModuloModuloCrossReference_2_0; }
		
		//EString
		public RuleCall getModuloModuloEStringParserRuleCall_2_0_1() { return cModuloModuloEStringParserRuleCall_2_0_1; }
		
		//').component(\''
		public Keyword getComponentKeyword_3() { return cComponentKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//'\','
		public Keyword getApostropheCommaKeyword_5() { return cApostropheCommaKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//'templateUrl:\''
		public Keyword getTemplateUrlKeyword_7() { return cTemplateUrlKeyword_7; }
		
		//template=[Template|EString]
		public Assignment getTemplateAssignment_8() { return cTemplateAssignment_8; }
		
		//[Template|EString]
		public CrossReference getTemplateTemplateCrossReference_8_0() { return cTemplateTemplateCrossReference_8_0; }
		
		//EString
		public RuleCall getTemplateTemplateEStringParserRuleCall_8_0_1() { return cTemplateTemplateEStringParserRuleCall_8_0_1; }
		
		//'\','
		public Keyword getApostropheCommaKeyword_9() { return cApostropheCommaKeyword_9; }
		
		//'controller:['
		public Keyword getControllerKeyword_10() { return cControllerKeyword_10; }
		
		//parametros+=[ObjetoAngular|EString]
		public Assignment getParametrosAssignment_11() { return cParametrosAssignment_11; }
		
		//[ObjetoAngular|EString]
		public CrossReference getParametrosObjetoAngularCrossReference_11_0() { return cParametrosObjetoAngularCrossReference_11_0; }
		
		//EString
		public RuleCall getParametrosObjetoAngularEStringParserRuleCall_11_0_1() { return cParametrosObjetoAngularEStringParserRuleCall_11_0_1; }
		
		//("," parametros+=[ObjetoAngular|EString])*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//parametros+=[ObjetoAngular|EString]
		public Assignment getParametrosAssignment_12_1() { return cParametrosAssignment_12_1; }
		
		//[ObjetoAngular|EString]
		public CrossReference getParametrosObjetoAngularCrossReference_12_1_0() { return cParametrosObjetoAngularCrossReference_12_1_0; }
		
		//EString
		public RuleCall getParametrosObjetoAngularEStringParserRuleCall_12_1_0_1() { return cParametrosObjetoAngularEStringParserRuleCall_12_1_0_1; }
		
		//','
		public Keyword getCommaKeyword_13() { return cCommaKeyword_13; }
		
		//funcion=Funcion
		public Assignment getFuncionAssignment_14() { return cFuncionAssignment_14; }
		
		//Funcion
		public RuleCall getFuncionFuncionParserRuleCall_14_0() { return cFuncionFuncionParserRuleCall_14_0; }
		
		//']});'
		public Keyword getRightSquareBracketRightCurlyBracketRightParenthesisSemicolonKeyword_15() { return cRightSquareBracketRightCurlyBracketRightParenthesisSemicolonKeyword_15; }
	}
	public class FuncionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Funcion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametrosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametrosEStringParserRuleCall_3_0 = (RuleCall)cParametrosAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVariablesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVariablesVariableParserRuleCall_5_0 = (RuleCall)cVariablesAssignment_5.eContents().get(0);
		private final Assignment cBodyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBodyEStringParserRuleCall_6_0 = (RuleCall)cBodyAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Funcion:
		//	'function ' name=EString '(' parametros=EString '){' variables+=Variable* body=EString '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'function ' name=EString '(' parametros=EString '){' variables+=Variable* body=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'function '
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//parametros=EString
		public Assignment getParametrosAssignment_3() { return cParametrosAssignment_3; }
		
		//EString
		public RuleCall getParametrosEStringParserRuleCall_3_0() { return cParametrosEStringParserRuleCall_3_0; }
		
		//'){'
		public Keyword getRightParenthesisLeftCurlyBracketKeyword_4() { return cRightParenthesisLeftCurlyBracketKeyword_4; }
		
		//variables+=Variable*
		public Assignment getVariablesAssignment_5() { return cVariablesAssignment_5; }
		
		//Variable
		public RuleCall getVariablesVariableParserRuleCall_5_0() { return cVariablesVariableParserRuleCall_5_0; }
		
		//body=EString
		public Assignment getBodyAssignment_6() { return cBodyAssignment_6; }
		
		//EString
		public RuleCall getBodyEStringParserRuleCall_6_0() { return cBodyEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValorEStringParserRuleCall_3_0 = (RuleCall)cValorAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Variable:
		//	'var' name=EString '=' valor=EString ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'var' name=EString '=' valor=EString ';'
		public Group getGroup() { return cGroup; }
		
		//'var'
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//valor=EString
		public Assignment getValorAssignment_3() { return cValorAssignment_3; }
		
		//EString
		public RuleCall getValorEStringParserRuleCall_3_0() { return cValorEStringParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class AnotacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Anotacion");
		private final Action cAnotacionAction = (Action)rule.eContents().get(1);
		
		//Anotacion:
		//	{Anotacion};
		@Override public ParserRule getRule() { return rule; }
		
		//{Anotacion}
		public Action getAnotacionAction() { return cAnotacionAction; }
	}
	public class SentenciaHTMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SentenciaHTML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPropiedadesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropiedadesPropiedadParserRuleCall_2_0 = (RuleCall)cPropiedadesAssignment_2.eContents().get(0);
		private final Assignment cDirectivasAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDirectivasDirectivaParserRuleCall_3_0 = (RuleCall)cDirectivasAssignment_3.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCurlybracesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCurlybracesCurlyBracesParserRuleCall_5_0 = (RuleCall)cCurlybracesAssignment_5.eContents().get(0);
		private final Assignment cSentenciashtmlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSentenciashtmlSentenciaHTMLCrossReference_6_0 = (CrossReference)cSentenciashtmlAssignment_6.eContents().get(0);
		private final RuleCall cSentenciashtmlSentenciaHTMLEStringParserRuleCall_6_0_1 = (RuleCall)cSentenciashtmlSentenciaHTMLCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLessThanSignSolidusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//SentenciaHTML:
		//	'<' name=EString propiedades+=Propiedad* directivas+=Directiva* '>'
		//	curlybraces+=CurlyBraces*
		//	sentenciashtml+=[SentenciaHTML|EString]* ('</' EString '>')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'<' name=EString propiedades+=Propiedad* directivas+=Directiva* '>' curlybraces+=CurlyBraces*
		//sentenciashtml+=[SentenciaHTML|EString]* ('</' EString '>')?
		public Group getGroup() { return cGroup; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//propiedades+=Propiedad*
		public Assignment getPropiedadesAssignment_2() { return cPropiedadesAssignment_2; }
		
		//Propiedad
		public RuleCall getPropiedadesPropiedadParserRuleCall_2_0() { return cPropiedadesPropiedadParserRuleCall_2_0; }
		
		//directivas+=Directiva*
		public Assignment getDirectivasAssignment_3() { return cDirectivasAssignment_3; }
		
		//Directiva
		public RuleCall getDirectivasDirectivaParserRuleCall_3_0() { return cDirectivasDirectivaParserRuleCall_3_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4() { return cGreaterThanSignKeyword_4; }
		
		//curlybraces+=CurlyBraces*
		public Assignment getCurlybracesAssignment_5() { return cCurlybracesAssignment_5; }
		
		//CurlyBraces
		public RuleCall getCurlybracesCurlyBracesParserRuleCall_5_0() { return cCurlybracesCurlyBracesParserRuleCall_5_0; }
		
		//sentenciashtml+=[SentenciaHTML|EString]*
		public Assignment getSentenciashtmlAssignment_6() { return cSentenciashtmlAssignment_6; }
		
		//[SentenciaHTML|EString]
		public CrossReference getSentenciashtmlSentenciaHTMLCrossReference_6_0() { return cSentenciashtmlSentenciaHTMLCrossReference_6_0; }
		
		//EString
		public RuleCall getSentenciashtmlSentenciaHTMLEStringParserRuleCall_6_0_1() { return cSentenciashtmlSentenciaHTMLEStringParserRuleCall_6_0_1; }
		
		//('</' EString '>')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'</'
		public Keyword getLessThanSignSolidusKeyword_7_0() { return cLessThanSignSolidusKeyword_7_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_7_1() { return cEStringParserRuleCall_7_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_7_2() { return cGreaterThanSignKeyword_7_2; }
	}
	public class DirectivaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Directiva");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignQuotationMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCurlybracesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCurlybracesCurlyBracesCrossReference_2_0 = (CrossReference)cCurlybracesAssignment_2.eContents().get(0);
		private final RuleCall cCurlybracesCurlyBracesEStringParserRuleCall_2_0_1 = (RuleCall)cCurlybracesCurlyBracesCrossReference_2_0.eContents().get(1);
		private final Assignment cReferenciaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferenciaObjetoAngularCrossReference_3_0 = (CrossReference)cReferenciaAssignment_3.eContents().get(0);
		private final RuleCall cReferenciaObjetoAngularEStringParserRuleCall_3_0_1 = (RuleCall)cReferenciaObjetoAngularCrossReference_3_0.eContents().get(1);
		private final Keyword cQuotationMarkKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Directiva:
		//	name=EString '="' curlybraces=[CurlyBraces|EString]? referencia=[ObjetoAngular|EString] '"';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '="' curlybraces=[CurlyBraces|EString]? referencia=[ObjetoAngular|EString] '"'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'="'
		public Keyword getEqualsSignQuotationMarkKeyword_1() { return cEqualsSignQuotationMarkKeyword_1; }
		
		//curlybraces=[CurlyBraces|EString]?
		public Assignment getCurlybracesAssignment_2() { return cCurlybracesAssignment_2; }
		
		//[CurlyBraces|EString]
		public CrossReference getCurlybracesCurlyBracesCrossReference_2_0() { return cCurlybracesCurlyBracesCrossReference_2_0; }
		
		//EString
		public RuleCall getCurlybracesCurlyBracesEStringParserRuleCall_2_0_1() { return cCurlybracesCurlyBracesEStringParserRuleCall_2_0_1; }
		
		//referencia=[ObjetoAngular|EString]
		public Assignment getReferenciaAssignment_3() { return cReferenciaAssignment_3; }
		
		//[ObjetoAngular|EString]
		public CrossReference getReferenciaObjetoAngularCrossReference_3_0() { return cReferenciaObjetoAngularCrossReference_3_0; }
		
		//EString
		public RuleCall getReferenciaObjetoAngularEStringParserRuleCall_3_0_1() { return cReferenciaObjetoAngularEStringParserRuleCall_3_0_1; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_4() { return cQuotationMarkKeyword_4; }
	}
	public class PropiedadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Propiedad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cQuotationMarkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Propiedad:
		//	name=EString '"' EString '"';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '"' EString '"'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_1() { return cQuotationMarkKeyword_1; }
		
		//EString
		public RuleCall getEStringParserRuleCall_2() { return cEStringParserRuleCall_2; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_3() { return cQuotationMarkKeyword_3; }
	}
	public class CurlyBracesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.CurlyBraces");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpresionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpresionExpresionParserRuleCall_1_0 = (RuleCall)cExpresionAssignment_1.eContents().get(0);
		private final Assignment cFiltroAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFiltroFiltroParserRuleCall_2_0 = (RuleCall)cFiltroAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//CurlyBraces:
		//	'{{' expresion=Expresion filtro=Filtro? '}}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{{' expresion=Expresion filtro=Filtro? '}}'
		public Group getGroup() { return cGroup; }
		
		//'{{'
		public Keyword getLeftCurlyBracketLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketLeftCurlyBracketKeyword_0; }
		
		//expresion=Expresion
		public Assignment getExpresionAssignment_1() { return cExpresionAssignment_1; }
		
		//Expresion
		public RuleCall getExpresionExpresionParserRuleCall_1_0() { return cExpresionExpresionParserRuleCall_1_0; }
		
		//filtro=Filtro?
		public Assignment getFiltroAssignment_2() { return cFiltroAssignment_2; }
		
		//Filtro
		public RuleCall getFiltroFiltroParserRuleCall_2_0() { return cFiltroFiltroParserRuleCall_2_0; }
		
		//'}}'
		public Keyword getRightCurlyBracketRightCurlyBracketKeyword_3() { return cRightCurlyBracketRightCurlyBracketKeyword_3; }
	}
	public class ExpresionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Expresion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValorAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValorEStringParserRuleCall_0_0 = (RuleCall)cValorAssignment_0.eContents().get(0);
		private final Assignment cReferenciaAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final CrossReference cReferenciaObjetoAngularCrossReference_1_0 = (CrossReference)cReferenciaAssignment_1.eContents().get(0);
		private final RuleCall cReferenciaObjetoAngularEStringParserRuleCall_1_0_1 = (RuleCall)cReferenciaObjetoAngularCrossReference_1_0.eContents().get(1);
		
		//Expresion:
		//	valor=EString | referencia=[ObjetoAngular|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//valor=EString | referencia=[ObjetoAngular|EString]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//valor=EString
		public Assignment getValorAssignment_0() { return cValorAssignment_0; }
		
		//EString
		public RuleCall getValorEStringParserRuleCall_0_0() { return cValorEStringParserRuleCall_0_0; }
		
		//referencia=[ObjetoAngular|EString]
		public Assignment getReferenciaAssignment_1() { return cReferenciaAssignment_1; }
		
		//[ObjetoAngular|EString]
		public CrossReference getReferenciaObjetoAngularCrossReference_1_0() { return cReferenciaObjetoAngularCrossReference_1_0; }
		
		//EString
		public RuleCall getReferenciaObjetoAngularEStringParserRuleCall_1_0_1() { return cReferenciaObjetoAngularEStringParserRuleCall_1_0_1; }
	}
	public class FiltroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Filtro");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParametrosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParametrosEStringParserRuleCall_1_0 = (RuleCall)cParametrosAssignment_1.eContents().get(0);
		
		//Filtro:
		//	'|' parametros=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'|' parametros=EString
		public Group getGroup() { return cGroup; }
		
		//'|'
		public Keyword getVerticalLineKeyword_0() { return cVerticalLineKeyword_0; }
		
		//parametros=EString
		public Assignment getParametrosAssignment_1() { return cParametrosAssignment_1; }
		
		//EString
		public RuleCall getParametrosEStringParserRuleCall_1_0() { return cParametrosEStringParserRuleCall_1_0; }
	}
	
	
	private final AppAngularJSElements pAppAngularJS;
	private final ObjetoAngularElements pObjetoAngular;
	private final ModuloElements pModulo;
	private final TemplateElements pTemplate;
	private final ModeloElements pModelo;
	private final EStringElements pEString;
	private final ServiceElements pService;
	private final ComponenteElements pComponente;
	private final FuncionElements pFuncion;
	private final EBooleanElements pEBoolean;
	private final VariableElements pVariable;
	private final AnotacionElements pAnotacion;
	private final SentenciaHTMLElements pSentenciaHTML;
	private final DirectivaElements pDirectiva;
	private final PropiedadElements pPropiedad;
	private final CurlyBracesElements pCurlyBraces;
	private final ExpresionElements pExpresion;
	private final FiltroElements pFiltro;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAppAngularJS = new AppAngularJSElements();
		this.pObjetoAngular = new ObjetoAngularElements();
		this.pModulo = new ModuloElements();
		this.pTemplate = new TemplateElements();
		this.pModelo = new ModeloElements();
		this.pEString = new EStringElements();
		this.pService = new ServiceElements();
		this.pComponente = new ComponenteElements();
		this.pFuncion = new FuncionElements();
		this.pEBoolean = new EBooleanElements();
		this.pVariable = new VariableElements();
		this.pAnotacion = new AnotacionElements();
		this.pSentenciaHTML = new SentenciaHTMLElements();
		this.pDirectiva = new DirectivaElements();
		this.pPropiedad = new PropiedadElements();
		this.pCurlyBraces = new CurlyBracesElements();
		this.pExpresion = new ExpresionElements();
		this.pFiltro = new FiltroElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AppAngularJS:
	//	modulos+=Modulo | templates+=Template | services+=Service | modelos+=Modelo | componentes+=Componente;
	public AppAngularJSElements getAppAngularJSAccess() {
		return pAppAngularJS;
	}
	
	public ParserRule getAppAngularJSRule() {
		return getAppAngularJSAccess().getRule();
	}
	
	//ObjetoAngular:
	//	Modulo | Componente | Service;
	public ObjetoAngularElements getObjetoAngularAccess() {
		return pObjetoAngular;
	}
	
	public ParserRule getObjetoAngularRule() {
		return getObjetoAngularAccess().getRule();
	}
	
	//Modulo:
	//	'\'use strict\';'? 'angular.module(\'' name=EString '\',[' parametros+=[ObjetoAngular|EString] (","
	//	parametros+=[ObjetoAngular|EString])* ']);';
	public ModuloElements getModuloAccess() {
		return pModulo;
	}
	
	public ParserRule getModuloRule() {
		return getModuloAccess().getRule();
	}
	
	//Template:
	//	name=EString '-' sentenciashtml+=SentenciaHTML*;
	public TemplateElements getTemplateAccess() {
		return pTemplate;
	}
	
	public ParserRule getTemplateRule() {
		return getTemplateAccess().getRule();
	}
	
	//Modelo:
	//	{Modelo}
	//	'Modelo';
	public ModeloElements getModeloAccess() {
		return pModelo;
	}
	
	public ParserRule getModeloRule() {
		return getModeloAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Service:
	//	'\'use strict\';'? 'describe(\'' name=EString '\',' funcion=Funcion;
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//Componente:
	//	'\'use strict\';'? 'angular.module(\'' modulo=[Modulo|EString] ').component(\'' name=EString '\','
	//	'{'
	//	'templateUrl:\'' template=[Template|EString] '\','
	//	'controller:[' parametros+=[ObjetoAngular|EString] ("," parametros+=[ObjetoAngular|EString])*
	//	',' funcion=Funcion
	//	']});';
	public ComponenteElements getComponenteAccess() {
		return pComponente;
	}
	
	public ParserRule getComponenteRule() {
		return getComponenteAccess().getRule();
	}
	
	//Funcion:
	//	'function ' name=EString '(' parametros=EString '){' variables+=Variable* body=EString '}';
	public FuncionElements getFuncionAccess() {
		return pFuncion;
	}
	
	public ParserRule getFuncionRule() {
		return getFuncionAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Variable:
	//	'var' name=EString '=' valor=EString ';';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//Anotacion:
	//	{Anotacion};
	public AnotacionElements getAnotacionAccess() {
		return pAnotacion;
	}
	
	public ParserRule getAnotacionRule() {
		return getAnotacionAccess().getRule();
	}
	
	//SentenciaHTML:
	//	'<' name=EString propiedades+=Propiedad* directivas+=Directiva* '>'
	//	curlybraces+=CurlyBraces*
	//	sentenciashtml+=[SentenciaHTML|EString]* ('</' EString '>')?;
	public SentenciaHTMLElements getSentenciaHTMLAccess() {
		return pSentenciaHTML;
	}
	
	public ParserRule getSentenciaHTMLRule() {
		return getSentenciaHTMLAccess().getRule();
	}
	
	//Directiva:
	//	name=EString '="' curlybraces=[CurlyBraces|EString]? referencia=[ObjetoAngular|EString] '"';
	public DirectivaElements getDirectivaAccess() {
		return pDirectiva;
	}
	
	public ParserRule getDirectivaRule() {
		return getDirectivaAccess().getRule();
	}
	
	//Propiedad:
	//	name=EString '"' EString '"';
	public PropiedadElements getPropiedadAccess() {
		return pPropiedad;
	}
	
	public ParserRule getPropiedadRule() {
		return getPropiedadAccess().getRule();
	}
	
	//CurlyBraces:
	//	'{{' expresion=Expresion filtro=Filtro? '}}';
	public CurlyBracesElements getCurlyBracesAccess() {
		return pCurlyBraces;
	}
	
	public ParserRule getCurlyBracesRule() {
		return getCurlyBracesAccess().getRule();
	}
	
	//Expresion:
	//	valor=EString | referencia=[ObjetoAngular|EString];
	public ExpresionElements getExpresionAccess() {
		return pExpresion;
	}
	
	public ParserRule getExpresionRule() {
		return getExpresionAccess().getRule();
	}
	
	//Filtro:
	//	'|' parametros=EString;
	public FiltroElements getFiltroAccess() {
		return pFiltro;
	}
	
	public ParserRule getFiltroRule() {
		return getFiltroAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
