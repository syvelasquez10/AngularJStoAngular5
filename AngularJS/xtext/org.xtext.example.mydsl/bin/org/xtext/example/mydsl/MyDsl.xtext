// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "https://uniandes.edu.co/angular" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

AppAngularJS returns AppAngularJS:
		'angular.module(\''name=[Modulo|EString] | template+=Template ( "," template+=Template)* '}';;

ObjetoJavaScript returns ObjetoJavaScript:
	Modulo | Funcion | Variable | Controller | Service;

Modulo returns Modulo:
	{Modulo}
	'Modulo'
	name=EString
	'{'
		('modulos' '(' modulos+=[Modulo|EString] ( "," modulos+=[Modulo|EString])* ')' )?
		('parametros' '{' parametros+=Parametro ( "," parametros+=Parametro)* '}' )?
		('services' '{' services+=Service ( "," services+=Service)* '}' )?
		('controller' '{' controller+=Controller ( "," controller+=Controller)* '}' )?
	'}';

Template returns Template:
	{Template}
	'Template'
	name=EString
	'{'
		('rutaArchivo' rutaArchivo=EString)?
		('controller' controller=[Controller|EString])?
		('setenciahtml' '{' setenciahtml+=SetenciaHTML ( "," setenciahtml+=SetenciaHTML)* '}' )?
		('directiva' '{' directiva+=Directiva ( "," directiva+=Directiva)* '}' )?
	'}';

Modelo returns Modelo:
	{Modelo}
	'Modelo'
	;

EString returns ecore::EString:
	STRING | ID;

Parametro returns Parametro:
	{Parametro}
	'Parametro'
	name=EString
	'{'
		('services' services=[Service|EString])?
	'}';

Service returns Service:
	'Service'
	name=EString
	'{'
		'parametro' parametro=[Parametro|EString]
		('funcion' '{' funcion+=Funcion ( "," funcion+=Funcion)* '}' )?
	'}';

Controller returns Controller:
	'Controller'
	name=EString
	'{'
		('body' body=EString)?
		('services' '(' services+=[Service|EString] ( "," services+=[Service|EString])* ')' )?
		'template' template=[Template|EString]
		('modelo' '(' modelo+=[Modelo|EString] ( "," modelo+=[Modelo|EString])* ')' )?
		('funcion' '{' funcion+=Funcion ( "," funcion+=Funcion)* '}' )?
		('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		('parametros' '{' parametros+=Parametro ( "," parametros+=Parametro)* '}' )?
	'}';

Funcion returns Funcion:
	{Funcion}
	(tieneRetorno?='tieneRetorno')?
	'Funcion'
	name=EString
	'{'
		('body' body=EString)?
		('funcion' '(' funcion+=[Funcion|EString] ( "," funcion+=[Funcion|EString])* ')' )?
		('parametros' '{' parametros+=Parametro ( "," parametros+=Parametro)* '}' )?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Variable returns Variable:
	{Variable}
	'Variable'
	name=EString
	'{'
		('valor' valor=EString)?
		('anotacion' anotacion=Anotacion)?
	'}';

Anotacion returns Anotacion:
	{Anotacion}
	'Anotacion'
	'{'
		('value' value=EString)?
	'}';

SetenciaHTML returns SetenciaHTML:
	{SetenciaHTML}
	(selfClosing?='selfClosing')?
	'SetenciaHTML'
	name=EString
	'{'
		('setenciahtml' '(' setenciahtml+=[SetenciaHTML|EString] ( "," setenciahtml+=[SetenciaHTML|EString])* ')' )?
		('directivas' '(' directivas+=[Directiva|EString] ( "," directivas+=[Directiva|EString])* ')' )?
		('propiedades' '{' propiedades+=Propiedad ( "," propiedades+=Propiedad)* '}' )?
		('curlybraces' '{' curlybraces+=CurlyBraces ( "," curlybraces+=CurlyBraces)* '}' )?
	'}';

Directiva returns Directiva:
	'Directiva'
	name=EString
	'{'
		'referencia' referencia=Referencia
	'}';

Propiedad returns Propiedad:
	{Propiedad}
	'Propiedad'
	name=EString
	'{'
		('valor' valor=EString)?
	'}';

CurlyBraces returns CurlyBraces:
	'CurlyBraces'
	'{'
		'expresion' expresion=Expresion
		('filtro' '{' filtro+=Filtro ( "," filtro+=Filtro)* '}' )?
	'}';

Expresion returns Expresion:
	{Expresion}
	'Expresion'
	'{'
		('valor' valor=EString)?
		('referencia' referencia=Referencia)?
	'}';

Filtro returns Filtro:
	{Filtro}
	'Filtro'
	name=EString
	'{'
		('parametros' parametros=EString)?
	'}';

Referencia returns Referencia:
	'Referencia'
	name=EString
	'{'
		'objeto' objeto=[ObjetoJavaScript|EString]
	'}';
